#ifndef I2C_MASTER_H
#define I2C_MASTER_H

#include <stdio.h>
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"

/************************** Constant Definitions ****************************/

/**************************** Type Definitions ******************************/

/**
 * The following data type keeps track of the statistics for the i2c Driver.
 */
typedef struct {
	u32       bytes_transmitted;
	u32       bytes_received;
	u32       receive_overrun_errors;
} i2c_stats;



/**
 * The following data type contains configuration information for the device.
 */
typedef struct {
	UINTPTR   reg_base_addr;
	u32       slave_addr;
	u32       prescale_val;
} i2c_config;


/**
 * The following data type contains all i2c instance data. The user is required
 * to allocate a variable of this type for every i2c device in the system. A
 * pointer to a variable of this type is then passed to the driver API functions.
 */
typedef struct {
	i2c_stats stats;
	UINTPTR   reg_base_address;
	u32       is_ready;
} i2c_device;


/************************** Function Prototypes *****************************/

//** Initialization Functions in i2c_master_init.c **//
int i2c_initialize(i2c_device *instance_ptr, u16_t deviceid);




#endif




















