#ifndef IIC_MASTER_L_H
#define IIC_MASTER_L_H

/***************************** Include Files ********************************/
#include <stdio.h>
#include "xil_types.h"
#include "xil_assert.h"
#include "xil_io.h"

/************************** Constant Definitions ****************************/

/* i2c master register offsets */

#define XIIC_STATUS_REG_OFFSET     0  /* Status Register, R/W */
#define XIIC_CMD_REG_OFFSET        1
#define XIIC_DATA_REG_OFFSET       2
#define XIIC_PRESCALE_REG_OFFSET   3

/* Status Register bit positions */
#define XIIC_RD_FULL               0x8000 /* read data FIFO full */
#define XIIC_RD_EMPTY              0x4000 /* read data FIFO empty */
#define XIIC_WR_OVF                0x2000 /* write data FIFO overflow; write 1 to clear */
#define XIIC_WR_FULL               0x1000 /* write data FIFO full */
#define XIIC_WR_EMPTY              0x800  /* write data FIFO empty */
#define XIIC_CMD_OVF               0x400  /* command FIFO overflow; write 1 to clear */
#define XIIC_CMD_FULL              0x200  /* command FIFO full */
#define XIIC_CMD_EMPTY             0x100  /* command FIFO empty */
#define XIIC_MISS_ACK              0x4    /* missed ACK from slave; write 1 to clear */
#define XIIC_BUS_ACT               0x2    /* bus is active */
#define XIIC_BUS_CONT              0x1    /* module has control of active bus */
#define XIIC_BUSY                  0x0    /* i2c operation ongoing */

/* Command Register bit positions */
#define XIIC_CMD_STOP             0x1000
#define XIIC_CMD_WR_MULTIPLE      0x800
#define XIIC_CMD_WR_EN            0x400
#define XIIC_CMD_RD_EN            0x200
#define XIIC_CMD_START            0x100
#define XIIC_CMD_ADDR_LO          0x0
#define XIIC_CMD_ADDR_WIDTH       0x7


/* Data Register bit positions */

/* Prescale Register bit positions */


#endif
